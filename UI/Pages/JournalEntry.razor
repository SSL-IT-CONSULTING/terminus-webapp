
@page "/journalentry"
@page "/journalentry/{JEId}"

@using terminus_webapp.Data
@attribute [Authorize]

@inherits JournalEntryBase

<h1 class="page-title">Journal Entry</h1>

@if (!IsDataLoaded)
{
    <p><em>Loading...</em></p>
}
else
{
<EditForm Model="@journalEntry" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary></ValidationSummary>
    <div class="form-group row">
        <label for="transactionDate" class="col-sm-2 col-form-label">Document Id: </label>
        <div class="col-sm-2">

            <label>@journalEntry.documentId</label>

        </div>

    </div>
    <div class="form-group row">
        <label for="transactionDate" class="col-sm-2 col-form-label">Entry Date: </label>
        <div class="col-sm-2">
            @if (!IsViewOnly)
            {
                <InputDate @bind-Value="@journalEntry.transactionDate" class="form-control">
                </InputDate>
            }
            else
            {
                <label>@journalEntry.transactionDate.ToString("yyyy-MM-dd")</label>
            }
        </div>

        <ValidationMessage class="offset-sm-2 col-sm-8" For="@(() => journalEntry.transactionDate)" />
    </div>

    <div class="form-group row">
        <label for="postingDate" class="col-sm-2 col-form-label">Posting Date: </label>
        <div class="col-sm-2">
            @if (!IsViewOnly)
            {
                <InputDate @bind-Value="@journalEntry.postingDate" class="form-control">
                </InputDate>
            }
            else
            {
                <label>@journalEntry.postingDate.ToString("yyyy-MM-dd")</label>
            }
        </div>

        <ValidationMessage class="offset-sm-2 col-sm-8" For="@(() => journalEntry.postingDate)" />
    </div>

    <div class="form-group row">
        <label for="description" class="col-sm-2 col-form-label">Description: </label>
        <div class="col-sm-2">
            @if (!IsViewOnly)
            {
                <InputText @bind-Value="@journalEntry.description" class="form-control">
                </InputText>
            }
            else
            {
                <label>@journalEntry.description</label>
            }
        </div>

        <ValidationMessage class="offset-sm-2 col-sm-8" For="@(() => journalEntry.description)" />
    </div>

    <div class="form-group row">
        <label for="reference" class="col-sm-2 col-form-label">Reference: </label>
        <div class="col-sm-2">
            @if (!IsViewOnly)
            {
                <InputText @bind-Value="@journalEntry.reference" class="form-control">
                </InputText>
            }
            else
            {
                <label>@journalEntry.reference</label>
            }
        </div>

        <ValidationMessage class="offset-sm-2 col-sm-8" For="@(() => journalEntry.reference)" />
    </div>

    <div class="form-group row">
        <label for="remarks" class="col-sm-2 col-form-label">Remarks: </label>
        <div class="col-sm-2">
            @if (!IsViewOnly)
            {
                <InputText @bind-Value="@journalEntry.remarks" class="form-control">
                </InputText>
            }
            else
            {
                <label>@journalEntry.remarks</label>
            }


        </div>
        <ValidationMessage class="offset-sm-2 col-sm-8" For="@(() => journalEntry.remarks)" />
    </div>
    <br />
    @if (!IsViewOnly)
    {
        <div style="display:block">
            <button @onclick="@AddDetail" class="btn btn-dark table-btn quick-add-btn" type="button">Add</button>
        </div>

    }

    <br />
    <table class="table">
        <thead>
            <tr>
                <th>GL Account</th>
                @*<th>Description</th>*@
                <th>Debit</th>
                <th>Credit</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var dtl in journalEntry.journalEntryDtls)
            {
                <tr>
                    <td>@dtl.accountCode - @dtl.accountName</td>
                    <td align="left">
                        @if (dtl.type.Equals("D", StringComparison.OrdinalIgnoreCase))
                        {
                            @dtl.amount.ToString("#,##0.00;(#,##0.00)")
                        }
                    </td>
                    <td align="left">
                        @if (dtl.type.Equals("C", StringComparison.OrdinalIgnoreCase))
                        {
                            @dtl.amount.ToString("#,##0.00;(#,##0.00)")
                        }
                    </td>
                    <td>
                        @if (!IsViewOnly)
                        {
                            <button type="button" class="btn btn-primary table-btn" @onclick="@(() => EditJE(dtl.id))">
                                <i class="fas fa-info-circle">Edit</i>
                            </button>
                            <button type="button" class="btn btn-primary table-btn" @onclick="@(() => DeleteJE(dtl.id))">
                                <i class="fas fa-info-circle">Delete</i>
                            </button>
                        }
                    </td>
                </tr>
            }

        </tbody>
        <tfoot>
            <tr>
                <td>&nbsp;</td>
                <td align="left" style="font-weight:bold">

                    @TotalDR.ToString("#,##0.00;(#,##0.00)")

                </td>
                <td align="left" style="font-weight:bold">

                    @TotalCR.ToString("#,##0.00;(#,##0.00)")

                </td>
                <td>&nbsp;</td>
            </tr>

            <tr>
                <td colspan="2" align="right" style="font-weight:bold">Balance:</td>

                <td align="left" style="font-weight:bold">

                    @TotalBalance.ToString("#,##0.00;(#,##0.00)")

                </td>

                <td>&nbsp;</td>
            </tr>

        </tfoot>
    </table>

    @if (!IsViewOnly)
    {
        <div style="display:block">
            <button type="submit" class="btn btn-primary edit-btn" onclick="return confirm('Are you sure you want to post this journal entry?');">Save</button>
            <button type="button" class="btn btn-primary edit-btn" @onclick="NavigateToList">Cancel</button>
            </div>
    }
    </EditForm>


    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <br />
        <p style="color:red"><em>@ErrorMessage</em></p>
        <br />
    }

    <JournalEntryDetail @ref="JournalEntryDetail" SaveEventCallback="@JournalEntryDetail_OnSave"
                        CancelEventCallback="@JournalEntryDetail_OnCancel"></JournalEntryDetail>




}


