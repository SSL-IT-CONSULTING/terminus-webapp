@page "/collectionentry"
@page "/collectionentry/{revenueId}"
@attribute [Authorize]
@using terminus.shared.models

@inherits CollectionsEntryBase

<h1 class="page-title">Collection Transaction</h1>

@if (!IsDataLoaded)
{
    <p><em>Loading...</em></p>
}
else if (IsDataLoaded && !string.IsNullOrEmpty(ErrorMessage))
{
    <p><em>Error encountered, please report it to the system administrator</em></p>
    <p><em>@ErrorMessage</em></p>
}
else if (DataSaved && !string.IsNullOrEmpty(ErrorMessage))
{
    <p><em>Error encountered while saving, please report it to the system administrator</em></p>
    <p><em>@ErrorMessage</em></p>
}
else
{
<EditForm Model="@revenue" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary></ValidationSummary>

    <div class="form-group row">
        <label for="description" class="col-sm-2 col-form-label">Description: </label>
        <div class="col-sm-5">
            @if (!IsViewonly)
            {
                <InputText @bind-Value="@revenue.description" class="form-control">
                </InputText>
            }
            else
            {
                @revenue.description
            }
        </div>
        <ValidationMessage class="offset-sm-2 col-sm-8" For="@(() => revenue.description)" />
    </div>

    <div class="form-group row">
        <label for="transactionDate" class="col-sm-2 col-form-label">Date: </label>
        <div class="col-sm-2">
            @if (!IsViewonly)
            {
                <InputDate @bind-Value="@revenue.transactionDate" class="form-control">
                </InputDate>
            }
            else
            {
                <label>@revenue.transactionDate.ToString("yyyy-MM-dd")</label>
            }
        </div>

        <ValidationMessage class="offset-sm-2 col-sm-8" For="@(() => revenue.transactionDate)" />
    </div>

    <div class="form-group row">
        <label for="propertyId" class="col-sm-2 col-form-label">Property: </label>
        <div class="col-sm-5">
            @if (!IsViewonly || revenue.collect)
            {
                <select id="propertyId" name="propertyId" @bind="PropertyId" class="form-control">
                    <option value=""></option>
                    @foreach (var p in revenue.properties)
                    {
                        <option value="@p.id">@p.description</option>
                    }
                </select>
            }
            else
            {
                <label>@revenue.propertyDescription</label>
            }

        </div>
        <ValidationMessage class="offset-sm-2 col-sm-8" For="@(() => revenue.propertyId)" />

    </div>

    <div class="form-group row">
        <label for="tenantId" class="col-sm-2 col-form-label">Tenant: </label>
        <div class="col-sm-5">
            <label>@revenue.tenantName</label>
            <input type="hidden" id="tenantId" name="tenantId" @bind="@revenue.tenantId" />
        </div>
        <ValidationMessage class="offset-sm-2 col-sm-8" For="@(() => revenue.tenantId)" />
    </div>
    <div class="form-group row">
        <label for="dueDate" class="col-sm-2 col-form-label">Due Date: </label>
        <div class="col-sm-2">
            @if (!IsViewonly || revenue.collect)
            {
                <InputDate @bind-Value="@revenue.dueDate" class="form-control">
                </InputDate>
            }
            else
            {
                <label>@(revenue.dueDate.HasValue ? revenue.dueDate.Value.ToString("yyyy-MM-dd") : "")</label>
            }
        </div>
    </div>

    <div class="form-group row">
        <label for="dueDate" class="col-sm-2 col-form-label">Billing: </label>
        <div class="col-sm-2">
            @if (!IsViewonly)
            {
                <InputText @bind-Value="@revenue.billingDocumentId" class="form-control" readonly="true">
                </InputText>
            }
            else
            {
                <label>@revenue.billingDocumentId</label>
            }
        </div>
        <div class="col-sm-2">
            @if (!IsViewonly && !revenue.collect)
            {
                <select id="BillingType" name="BillingType" @bind="BillingType" class="form-control">
                    <option value="MB">Monthly Bill</option>
                    <option value="OTHERS">Other Bill</option>
                </select>
            }
            else
            {
                if (BillingType.Equals("MB"))
                {
                    <label>Monthly Bill</label>
                }
                else
                {
                    <label>Other Bill</label>
                }
            }

        </div>
        <ValidationMessage class="offset-sm-2 col-sm-6" For="@(() => revenue.billingDocumentId)" />
    </div>

    <div class="form-group row">
        <div class="col-sm-2">
            @if (!IsViewonly && !revenue.collect)
            {
                <button @onclick="@CreateBillEntry" type="button" class="btn btn-primary">Find/Create bill</button>
            }
        </div>
    </div>
    <div class="form-group row">
        <label for="reference" class="col-sm-2 col-form-label">Reference: </label>
        <div class="col-sm-5">
            @if (!IsViewonly)
            {
                <InputText @bind-Value="@revenue.reference" class="form-control">
                </InputText>
            }
            else
            {
                @revenue.reference
            }
        </div>
    </div>
    <div class="form-group row">
        <label for="receiptNo" class="col-sm-2 col-form-label">Issue receipt no: </label>
        <div class="col-sm-5">
            @if (!IsViewonly)
            {
                <InputText @bind-Value="@revenue.receiptNo" class="form-control">
                </InputText>
            }
            else
            {
                <label>@revenue.receiptNo</label>
            }
        </div>
        <ValidationMessage class="offset-sm-2 col-sm-8" For="@(() => revenue.receiptNo)" />
    </div>

    @if (!IsViewonly || revenue.collect)
    {
        <button type="submit" class="btn btn-primary edit-btn">Save</button>
        <button type="button" class="btn btn-primary edit-btn">Pay outstanding</button>
    }
    <button type="button" class="btn btn-primary edit-btn" @onclick="@NavigateToList">Cancel</button>

</EditForm>

    @if (revenue != null && revenue.revenueLineItems != null && IsDataLoaded)
    {
        <div style="display:block">
            <table class="table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th>Description</th>
                        <th>Balance</th>
                        <th>Paid amount</th>
                        <th>Amount</th>
                        <th>Debit</th>
                        <th>Credit</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in revenue.revenueLineItems)
                    {
                    <tr>
                        <td>@item.description</td>
                        <td>@item.billBalance.ToString("#,##0.00;(#,##0.00)")</td>
                        <td>@((item.amount).ToString("#,##0.00;(#,##0.00)"))</td>
                        <td>@((item.amountApplied).ToString("#,##0.00;(#,##0.00)"))</td>
                        <td>@string.Format("{0} - {1}", item.debitAccountCode, item.debitAccountName)</td>
                        <td>@string.Format("{0} - {1}", item.creditAccountCode, item.creditAccountName)</td>
                        <td>
                            <button type="button" class="btn btn-primary table-btn" @onclick="@(() => ApplyPaymentLineItem(item.Id))">
                                <i class="fas fa-info-circle">Apply Payment</i>
                            </button>
                        </td>
                    </tr>
                }

                </tbody>
                @*<tfoot>
                        <tr>
                            <td>Total</td>
                            <td>@Bill.totalAmount.ToString("#,##0.00;(#,##0.00)")</td>
                            <td>@Bill.balance.ToString("#,##0.00;(#,##0.00)")</td>
                            <td>@Bill.amountPaid.ToString("#,##0.00;(#,##0.00)")</td>
                        </tr>
                    </tfoot>*@
            </table>

        </div>
    }

    <ApplyPayment @ref="ApplyPayment" SaveEventCallback="@ApplyPayment_OnSave"
                  CancelEventCallback="@ApplyPayment_OnCancel"></ApplyPayment>

    <BillingEntry @ref="BillingEntry" SaveEventCallback="@BillEntry_OnSave"
                  CancelEventCallback="@BillEntry_OnCancel"></BillingEntry>
}

