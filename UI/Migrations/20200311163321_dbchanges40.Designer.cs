// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using terminus_webapp.Data;

namespace terminus_webapp.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20200311163321_dbchanges40")]
    partial class dbchanges40
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("terminus.shared.models.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("terminus.shared.models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("companyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("middleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("companyId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("terminus.shared.models.Billing", b =>
                {
                    b.Property<Guid>("billId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MonthYear")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<decimal>("amountPaid")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("balance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("billType")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("companyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("dateDue")
                        .HasColumnType("datetime2");

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("documentId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<Guid>("propertyDirectoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<decimal>("totalAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("transactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("billId");

                    b.HasIndex("MonthYear");

                    b.HasIndex("propertyDirectoryId");

                    b.HasIndex("companyId", "documentId")
                        .IsUnique()
                        .HasFilter("[companyId] IS NOT NULL AND [documentId] IS NOT NULL");

                    b.ToTable("Billings");
                });

            modelBuilder.Entity("terminus.shared.models.BillingLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("amountPaid")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("billLineType")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<Guid>("billingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("generated")
                        .HasColumnType("bit");

                    b.Property<int>("lineNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("billingId");

                    b.ToTable("BillingLineItems");
                });

            modelBuilder.Entity("terminus.shared.models.CheckDetails", b =>
                {
                    b.Property<Guid>("checkDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("bankName")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("branch")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime>("checkDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("checkNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("checkDetailId");

                    b.ToTable("CheckDetails");
                });

            modelBuilder.Entity("terminus.shared.models.Company", b =>
                {
                    b.Property<string>("companyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("companyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("terminus.shared.models.CompanyDefault", b =>
                {
                    b.Property<string>("companyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<Guid?>("RevenueAssocDuesAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RevenueAssocDuesDebitAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RevenueAssocDuesVatAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RevenueMonthlyDueAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RevenueMonthlyDueDebitAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RevenueMonthlyDueVatAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RevenueMonthlyDueWTAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("companyId");

                    b.HasIndex("RevenueAssocDuesAccountId");

                    b.HasIndex("RevenueAssocDuesDebitAccountId");

                    b.HasIndex("RevenueAssocDuesVatAccountId");

                    b.HasIndex("RevenueMonthlyDueAccountId");

                    b.HasIndex("RevenueMonthlyDueDebitAccountId");

                    b.HasIndex("RevenueMonthlyDueVatAccountId");

                    b.HasIndex("RevenueMonthlyDueWTAccountId");

                    b.ToTable("CompanyDefaults");
                });

            modelBuilder.Entity("terminus.shared.models.Customer", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("companyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("contactNo1")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("contactNo2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("contactNo3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("vatRegistered")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("terminus.shared.models.DocumentIdTable", b =>
                {
                    b.Property<string>("IdKey")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("NextId")
                        .HasColumnType("int");

                    b.HasKey("IdKey", "CompanyId");

                    b.HasIndex("CompanyId");

                    b.ToTable("DocumentIdTable");
                });

            modelBuilder.Entity("terminus.shared.models.Employee", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(708)")
                        .HasMaxLength(708);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("PagIbig")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PhilHealth")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SSS")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TIN")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("EmployeeId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("terminus.shared.models.Expense", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("accountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("beforeTax")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid?>("cashAccountaccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("cashOrCheck")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<Guid?>("checkDetailscheckDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("companyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("documentId")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("dueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("journalEntryid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("receiptNo")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("reference")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal>("taxAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("transactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("vendorId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("vendorOther")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.HasIndex("accountId");

                    b.HasIndex("cashAccountaccountId");

                    b.HasIndex("checkDetailscheckDetailId");

                    b.HasIndex("companyId");

                    b.HasIndex("journalEntryid");

                    b.HasIndex("vendorId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("terminus.shared.models.GLAccount", b =>
                {
                    b.Property<Guid>("accountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("accountCode")
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("accountDesc")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<decimal>("balance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("cashAccount")
                        .HasColumnType("bit");

                    b.Property<string>("companyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("expense")
                        .HasColumnType("bit");

                    b.Property<bool>("outputVatAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("revenue")
                        .HasColumnType("bit");

                    b.Property<int>("rowOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("accountId");

                    b.HasIndex("rowOrder");

                    b.HasIndex("companyId", "accountCode")
                        .IsUnique()
                        .HasFilter("[companyId] IS NOT NULL AND [accountCode] IS NOT NULL");

                    b.ToTable("GLAccounts");
                });

            modelBuilder.Entity("terminus.shared.models.JournalEntryDtl", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<Guid?>("JournalEntryHdrid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("accountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(14,4)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("lineNumber")
                        .HasColumnType("int");

                    b.Property<string>("reference")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("JournalEntryHdrid");

                    b.HasIndex("accountId");

                    b.ToTable("JournalEntriesDtl");
                });

            modelBuilder.Entity("terminus.shared.models.JournalEntryHdr", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("companyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("documentId")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("postingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("reference")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("source")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("sourceId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("transactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("companyId");

                    b.ToTable("JournalEntriesHdr");
                });

            modelBuilder.Entity("terminus.shared.models.Owner", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("companyId")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("contactNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("emailAddress")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("middleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("companyId");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("terminus.shared.models.Property", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<decimal>("areaInSqm")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("companyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("propertyType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("companyId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("terminus.shared.models.PropertyDirectory", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("associationDues")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("companyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("dateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("monthlyRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("penaltyPct")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("propertyId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<decimal>("ratePerSQM")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ratePerSQMAssocDues")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid?>("revenueAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("tenandId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<decimal>("totalBalance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("withWT")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("companyId");

                    b.HasIndex("propertyId");

                    b.HasIndex("revenueAccountId");

                    b.HasIndex("tenandId");

                    b.ToTable("PropertyDirectory");
                });

            modelBuilder.Entity("terminus.shared.models.PropertyDocument", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("extName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("fileDesc")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("fileName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("filePath")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<Guid>("propertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("PropertyDocument");
                });

            modelBuilder.Entity("terminus.shared.models.ReferenceViewModal", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AsOfDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenceCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ReferenceType")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ReferenceValue")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int?>("ReportParameterViewModelId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ReportParameterViewModelId");

                    b.ToTable("ReferenceViewModals");
                });

            modelBuilder.Entity("terminus.shared.models.ReportParameterViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasMaxLength(8)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReportType")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("dateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReportParameterViewModels");
                });

            modelBuilder.Entity("terminus.shared.models.Revenue", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("beforeTax")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid?>("billId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("billingType")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("cashOrCheck")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<Guid?>("checkDetailscheckDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("companyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("documentId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime?>("dueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("journalEntryid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("propertyDirectoryid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("receiptNo")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("reference")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal>("taxAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("transactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("billId");

                    b.HasIndex("checkDetailscheckDetailId");

                    b.HasIndex("companyId");

                    b.HasIndex("journalEntryid");

                    b.HasIndex("propertyDirectoryid");

                    b.ToTable("Revenues");
                });

            modelBuilder.Entity("terminus.shared.models.RevenueLineItem", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("bankName")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<Guid>("billingLineItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("branch")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("cashOrCheck")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("checkDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("creditAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("debitAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("revenueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("billingLineItemId");

                    b.HasIndex("creditAccountId");

                    b.HasIndex("debitAccountId");

                    b.HasIndex("revenueId");

                    b.ToTable("RevenueLineItem");
                });

            modelBuilder.Entity("terminus.shared.models.Tenant", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("companyId")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("contactNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("emailAddress")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("middleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.HasIndex("companyId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("terminus.shared.models.TenantDocument", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("extName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("fileDesc")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("fileName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("filePath")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<Guid>("propertyDirectoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("TenantDocuments");
                });

            modelBuilder.Entity("terminus.shared.models.Vendor", b =>
                {
                    b.Property<string>("vendorId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("companyId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<Guid?>("inputVatAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isVatRegistered")
                        .HasColumnType("bit");

                    b.Property<int>("rowOrder")
                        .HasColumnType("int");

                    b.Property<string>("vendorName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("vendorId");

                    b.HasIndex("companyId");

                    b.HasIndex("inputVatAccountId");

                    b.HasIndex("rowOrder");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("terminus.shared.models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("terminus.shared.models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("terminus.shared.models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("terminus.shared.models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("terminus.shared.models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("terminus.shared.models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("terminus.shared.models.AppUser", b =>
                {
                    b.HasOne("terminus.shared.models.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");
                });

            modelBuilder.Entity("terminus.shared.models.Billing", b =>
                {
                    b.HasOne("terminus.shared.models.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("terminus.shared.models.PropertyDirectory", "propertyDirectory")
                        .WithMany()
                        .HasForeignKey("propertyDirectoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("terminus.shared.models.BillingLineItem", b =>
                {
                    b.HasOne("terminus.shared.models.Billing", "billing")
                        .WithMany("billingLineItems")
                        .HasForeignKey("billingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("terminus.shared.models.CompanyDefault", b =>
                {
                    b.HasOne("terminus.shared.models.GLAccount", "RevenueAssocDuesAccount")
                        .WithMany()
                        .HasForeignKey("RevenueAssocDuesAccountId");

                    b.HasOne("terminus.shared.models.GLAccount", "RevenueAssocDuesDebitAccount")
                        .WithMany()
                        .HasForeignKey("RevenueAssocDuesDebitAccountId");

                    b.HasOne("terminus.shared.models.GLAccount", "RevenueAssocDuesVatAccount")
                        .WithMany()
                        .HasForeignKey("RevenueAssocDuesVatAccountId");

                    b.HasOne("terminus.shared.models.GLAccount", "RevenueMonthlyDueAccount")
                        .WithMany()
                        .HasForeignKey("RevenueMonthlyDueAccountId");

                    b.HasOne("terminus.shared.models.GLAccount", "RevenueMonthlyDueDebitAccount")
                        .WithMany()
                        .HasForeignKey("RevenueMonthlyDueDebitAccountId");

                    b.HasOne("terminus.shared.models.GLAccount", "RevenueMonthlyDueVatAccount")
                        .WithMany()
                        .HasForeignKey("RevenueMonthlyDueVatAccountId");

                    b.HasOne("terminus.shared.models.GLAccount", "RevenueMonthlyDueWTAccount")
                        .WithMany()
                        .HasForeignKey("RevenueMonthlyDueWTAccountId");
                });

            modelBuilder.Entity("terminus.shared.models.DocumentIdTable", b =>
                {
                    b.HasOne("terminus.shared.models.Company", "company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("terminus.shared.models.Employee", b =>
                {
                    b.HasOne("terminus.shared.models.Company", "company")
                        .WithMany()
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("terminus.shared.models.Expense", b =>
                {
                    b.HasOne("terminus.shared.models.GLAccount", "account")
                        .WithMany()
                        .HasForeignKey("accountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("terminus.shared.models.GLAccount", "cashAccount")
                        .WithMany()
                        .HasForeignKey("cashAccountaccountId");

                    b.HasOne("terminus.shared.models.CheckDetails", "checkDetails")
                        .WithMany()
                        .HasForeignKey("checkDetailscheckDetailId");

                    b.HasOne("terminus.shared.models.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("terminus.shared.models.JournalEntryHdr", "journalEntry")
                        .WithMany()
                        .HasForeignKey("journalEntryid");

                    b.HasOne("terminus.shared.models.Vendor", "vendor")
                        .WithMany()
                        .HasForeignKey("vendorId");
                });

            modelBuilder.Entity("terminus.shared.models.GLAccount", b =>
                {
                    b.HasOne("terminus.shared.models.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");
                });

            modelBuilder.Entity("terminus.shared.models.JournalEntryDtl", b =>
                {
                    b.HasOne("terminus.shared.models.JournalEntryHdr", null)
                        .WithMany("JournalDetails")
                        .HasForeignKey("JournalEntryHdrid");

                    b.HasOne("terminus.shared.models.GLAccount", "account")
                        .WithMany()
                        .HasForeignKey("accountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("terminus.shared.models.JournalEntryHdr", b =>
                {
                    b.HasOne("terminus.shared.models.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");
                });

            modelBuilder.Entity("terminus.shared.models.Owner", b =>
                {
                    b.HasOne("terminus.shared.models.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");
                });

            modelBuilder.Entity("terminus.shared.models.Property", b =>
                {
                    b.HasOne("terminus.shared.models.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");
                });

            modelBuilder.Entity("terminus.shared.models.PropertyDirectory", b =>
                {
                    b.HasOne("terminus.shared.models.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("terminus.shared.models.Property", "property")
                        .WithMany()
                        .HasForeignKey("propertyId");

                    b.HasOne("terminus.shared.models.GLAccount", "revenueAccount")
                        .WithMany()
                        .HasForeignKey("revenueAccountId");

                    b.HasOne("terminus.shared.models.Tenant", "tenant")
                        .WithMany()
                        .HasForeignKey("tenandId");
                });

            modelBuilder.Entity("terminus.shared.models.ReferenceViewModal", b =>
                {
                    b.HasOne("terminus.shared.models.ReportParameterViewModel", null)
                        .WithMany("ReferenceVM")
                        .HasForeignKey("ReportParameterViewModelId");
                });

            modelBuilder.Entity("terminus.shared.models.Revenue", b =>
                {
                    b.HasOne("terminus.shared.models.Billing", "billing")
                        .WithMany("collections")
                        .HasForeignKey("billId");

                    b.HasOne("terminus.shared.models.CheckDetails", "checkDetails")
                        .WithMany()
                        .HasForeignKey("checkDetailscheckDetailId");

                    b.HasOne("terminus.shared.models.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("terminus.shared.models.JournalEntryHdr", "journalEntry")
                        .WithMany()
                        .HasForeignKey("journalEntryid");

                    b.HasOne("terminus.shared.models.PropertyDirectory", "propertyDirectory")
                        .WithMany()
                        .HasForeignKey("propertyDirectoryid");
                });

            modelBuilder.Entity("terminus.shared.models.RevenueLineItem", b =>
                {
                    b.HasOne("terminus.shared.models.BillingLineItem", "billingLineItem")
                        .WithMany()
                        .HasForeignKey("billingLineItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("terminus.shared.models.GLAccount", "creditAccount")
                        .WithMany()
                        .HasForeignKey("creditAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("terminus.shared.models.GLAccount", "debitAccount")
                        .WithMany()
                        .HasForeignKey("debitAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("terminus.shared.models.Revenue", "revenue")
                        .WithMany("revenueLineItems")
                        .HasForeignKey("revenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("terminus.shared.models.Tenant", b =>
                {
                    b.HasOne("terminus.shared.models.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");
                });

            modelBuilder.Entity("terminus.shared.models.Vendor", b =>
                {
                    b.HasOne("terminus.shared.models.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("terminus.shared.models.GLAccount", "inputVatAccount")
                        .WithMany()
                        .HasForeignKey("inputVatAccountId");
                });
#pragma warning restore 612, 618
        }
    }
}
